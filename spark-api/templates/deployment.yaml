apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "spark-api.fullname" . }}
  labels:
    app: sparkapi
  {{- include "spark-api.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.api.replicas }}
  selector:
    matchLabels:
      app: sparkapi
    {{- include "spark-api.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: sparkapi
      {{- include "spark-api.selectorLabels" . | nindent 8 }}
    spec:
      initContainers:
        - command:
            - sh
            - -c
            - until curl -m 5  {{ .Release.Name }}-bridge-service:8080/ready; do echo waiting for kafka start; sleep 8; done;
          image: odise/busybox-curl:latest
          name: wait-for-kafka-ready

      containers:
      - env:
        {{- range $key, $val := .Values.env }}
        - name: {{  $key }}
          value: {{  $val | quote }}
        {{- end }}  
        image: {{ .Values.api.sparkapi.image.repository }}:{{ .Values.api.sparkapi.image.tag
          | default .Chart.AppVersion }}
        imagePullPolicy: {{ .Values.api.sparkapi.image.imagePullPolicy }}
        name: sparkapi
        ports:
        - containerPort: 8087
          protocol: TCP   
        readinessProbe:
          failureThreshold: 5       #检测失败5次表示未就绪
          initialDelaySeconds: 10   #延迟加载时间
          periodSeconds: 10          #重试时间间隔
          timeoutSeconds: 5         #超时时间设置
          successThreshold: 1      #检查成功为2次表示就绪
          exec:
            command:
            - curl
            - -m 5 
            - {{ .Release.Name }}-bridge-service:8080/ready
        livenessProbe:
          failureThreshold: 5       #检测失败5次表示未就绪
          initialDelaySeconds: 10   #延迟加载时间
          periodSeconds: 10          #重试时间间隔
          timeoutSeconds: 5         #超时时间设置
          successThreshold: 1       #检查成功为2次表示就绪
          exec:
            command:
            - curl 
            - -m 5 
            - {{ .Release.Name }}-bridge-service:8080/healthy            
        resources: {}