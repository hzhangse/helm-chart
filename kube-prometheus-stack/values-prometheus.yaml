prometheusOperator:
  image:
    repository: quay.io/prometheus-operator/prometheus-operator
    tag: v0.59.1
    sha: ""
    pullPolicy: IfNotPresent
  prometheusConfigReloader:
    image:
      repository: quay.io/prometheus-operator/prometheus-config-reloader
      tag: v0.59.1
      sha: ""    
  admissionWebhooks:
    patch:
      image:
        repository: dyrnq/kube-webhook-certgen
        tag: v1.3.0
        sha: ""
        pullPolicy: IfNotPresent

alertmanager: 
  alertmanagerSpec:
    ## Image of Alertmanager
    image:
      repository: quay.io/prometheus/alertmanager
      tag: v0.24.0
  
prometheus:
  service:
    type: NodePort
    nodePort: 30091
  prometheusSpec:
    image:
      repository: quay.io/prometheus/prometheus
      tag: v2.38.0
      sha: ""
    enableRemoteWriteReceiver: true
    podAntiAffinity: "hard"

    ## If anti-affinity is enabled sets the topologyKey to use for anti-affinity.
    ## This can be changed to, for example, failure-domain.beta.kubernetes.io/zone
    ##
    podAntiAffinityTopologyKey: kubernetes.io/hostname
    remoteWrite: 
    - url: http://kube-prometheus-thanos-receive.monitor.svc.cluster.local:19291/api/v1/receive

    containers: 
    - name: prometheus
      args:
        - "--web.console.templates=/etc/prometheus/consoles"
        - "--web.console.libraries=/etc/prometheus/console_libraries"
        - "--config.file=/etc/prometheus/config_out/prometheus.env.yaml"
        - "--web.enable-remote-write-receiver"
        - "--storage.tsdb.path=/prometheus"
        - "--web.enable-lifecycle"
        - "--storage.tsdb.no-lockfile"
        - "--web.enable-admin-api"
        - "--web.route-prefix=/"
        - "--web.config.file=/etc/prometheus/web_config/web-config.yaml"
        - "--storage.tsdb.min-block-duration=10m"
        - "--storage.tsdb.max-block-duration=10m"
        - "--storage.tsdb.retention.size=800MB"
        - "--storage.tsdb.retention.time=1h"      
    storageSpec: 
      volumeClaimTemplate:
        spec:
          storageClassName: longhorn
          resources:
            requests:
              storage: 1Gi    
    additionalScrapeConfigs: 
    - job_name: 'spark-pods-jmx'
      kubernetes_sd_configs:
      - role: pod
      relabel_configs:
      - source_labels: [__meta_kubernetes_pod_annotation_jmx_prometheus_io_scrape]
        action: keep
        regex: true
      - source_labels: [__meta_kubernetes_pod_annotation_jmx_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      - source_labels: [__address__, __meta_kubernetes_pod_annotation_jmx_prometheus_io_port]
        action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        target_label: __address__
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: kubernetes_namespace
      - source_labels: [__meta_kubernetes_pod_name]
        action: replace
        target_label: kubernetes_pod_name     
    - job_name: 'spark-driver-executors-pods'
      kubernetes_sd_configs:
      - role: pod
      metrics_path: /metrics/executors/prometheus
      scrape_interval: 15s
      relabel_configs:
      - source_labels: [__meta_kubernetes_pod_annotation_executors_prometheus_io_scrape]
        action: keep
        regex: true
      - source_labels: [__meta_kubernetes_pod_annotation_executors_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      - source_labels: [__address__, __meta_kubernetes_pod_annotation_executors_prometheus_io_port]
        action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        target_label: __address__
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: kubernetes_namespace
      - source_labels: [__meta_kubernetes_pod_name]
        action: replace
        target_label: kubernetes_pod_name     
      metric_relabel_configs:
      - source_labels: [ __name__ ]
        target_label: __name__
        regex: metrics_application_[0-9]+_[0-9]+_(.+)
        replacement: spark_$1
      - source_labels: [ __name__ ]
        target_label: __name__
        regex: metrics_(.+)
        replacement: spark_$1  
          
thanos:
  enabled: true
  alertmanagerSpec:
    image:
      repository: quay.io/prometheus/alertmanager
      tag: v0.24.0
      sha: ""  
  image:
    registry: docker.io
    repository: bitnami/thanos
    tag: 0.28.0-scratch-r0

  queryFrontend:
    enabled: true 
    service: 
      type: NodePort

  query: 
   dnsDiscovery:
    sidecarsService: kube-prometheus-prometheus-thanos
    sidecarsNamespace: monitoring  

  bucketweb:
    enabled: true
    service: 
      type: NodePort    

  compactor:
    enabled: true
    persistence: 
      enabled: true
      storageClass: longhorn
      accessModes: 
        - ReadWriteOnce
      size: 1Gi

  storegateway:
    enabled: true
    extraFlags:
      - --sync-block-duration=3m
      - --chunk-pool-size=1GB    
    persistence: 
      enabled: true
      storageClass: longhorn
      accessModes: 
        - ReadWriteOnce
      size: 1Gi



  receive:
    enabled: true
    service: 
      additionalHeadless: true
    mode: dual-mode
    replicationFactor: 1
    replicaCount: 1
    persistence: 
      enabled: true
      storageClass: longhorn
      accessModes: 
        - ReadWriteOnce
      size: 1Gi

  receiveDistributor:
    enabled: true

  minio:
    enabled: true 
    image:
      registry: docker.io
      repository: bitnami/minio
      tag: 2022.8.22-debian-11-r0
    service: 
      type: NodePort
    persistence: 
      enabled: true
      storageClass: longhorn
      accessModes: 
        - ReadWriteOnce
      size: 2Gi
    auth: 
      rootPassword: admin123
  
  
  objstoreConfig: |-
    type: s3
    config:
      bucket: thanos
      endpoint: {{ .Release.Name }}-minio.{{ .Release.Namespace }}.svc.cluster.local:9000
      access_key: admin
      secret_key: admin123
      insecure: true                

prometheus-node-exporter: 
  service: 
    port: 9102
    targetPort: 9102 
  image:
    repository: quay.io/prometheus/node-exporter
    tag: "v1.3.1"    

kube-state-metrics:
  image:
    repository: bitnami/kube-state-metrics
    tag: 2.6.0

grafana:
  service: 
    type: NodePort
  image:
    repository: grafana/grafana  
    tag: "9.1.4"
  testFramework:
    enabled: true
    image: "bats/bats"
    tag: "v1.4.1"
  sidecar:
    image:
      repository: quay.io/kiwigrid/k8s-sidecar
      tag: 1.19.2

spark-dashboard:
  enabled: true     
  influxdb:  
    image: "influxdb:1.8.10"
    storage:
      class: "longhorn"
      type: "ReadWriteOnce"
      size: "1Gi"