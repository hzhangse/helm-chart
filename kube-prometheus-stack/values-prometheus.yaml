prometheus:
  prometheusSpec:
    enableRemoteWriteReceiver: true
    podAntiAffinity: "hard"

    ## If anti-affinity is enabled sets the topologyKey to use for anti-affinity.
    ## This can be changed to, for example, failure-domain.beta.kubernetes.io/zone
    ##
    podAntiAffinityTopologyKey: kubernetes.io/hostname
    remoteWrite: 
    - url: http://kube-prometheus-thanos-receive.monitor.svc.cluster.local:19291/api/v1/receive

    containers: 
    - name: prometheus
      args:
        - "--web.console.templates=/etc/prometheus/consoles"
        - "--web.console.libraries=/etc/prometheus/console_libraries"
        - "--config.file=/etc/prometheus/config_out/prometheus.env.yaml"
        - "--web.enable-remote-write-receiver"
        - "--storage.tsdb.path=/prometheus"
        - "--web.enable-lifecycle"
        - "--storage.tsdb.no-lockfile"
        - "--web.enable-admin-api"
        - "--web.route-prefix=/"
        - "--web.config.file=/etc/prometheus/web_config/web-config.yaml"
        - "--storage.tsdb.min-block-duration=10m"
        - "--storage.tsdb.max-block-duration=10m"
        - "--storage.tsdb.retention.size=800MB"
        - "--storage.tsdb.retention.time=1h"      
    storageSpec: 
      volumeClaimTemplate:
        spec:
          storageClassName: longhorn
          resources:
            requests:
              storage: 3Gi    

thanos:
  enabled: true

  queryFrontend:
    enabled: true 
    service: 
      type: NodePort

  query: 
   dnsDiscovery:
    sidecarsService: kube-prometheus-prometheus-thanos
    sidecarsNamespace: monitoring  

  bucketweb:
    enabled: true
    service: 
      type: NodePort    

  compactor:
    enabled: true
    persistence: 
      enabled: true
      storageClass: longhorn
      accessModes: 
        - ReadWriteOnce
      size: 1Gi

  storegateway:
    enabled: true
    extraFlags:
      - --sync-block-duration=3m
      - --chunk-pool-size=1GB    
    persistence: 
      enabled: true
      storageClass: longhorn
      accessModes: 
        - ReadWriteOnce
      size: 1Gi



  receive:
    enabled: true
    service: 
      additionalHeadless: true
    mode: dual-mode
    replicationFactor: 1
    replicaCount: 2
    persistence: 
      enabled: true
      storageClass: longhorn
      accessModes: 
        - ReadWriteOnce
      size: 1Gi

  receiveDistributor:
    enabled: true

  minio:
    enabled: true 
    service: 
      type: NodePort
    persistence: 
      enabled: true
      storageClass: longhorn
      accessModes: 
        - ReadWriteOnce
      size: 2Gi
    auth: 
      rootPassword: admin123
  
  
  objstoreConfig: |-
    type: s3
    config:
      bucket: thanos
      endpoint: {{ .Release.Name }}-minio.{{ .Release.Namespace }}.svc.cluster.local:9000
      access_key: admin
      secret_key: admin123
      insecure: true                

prometheus-node-exporter: 
  service: 
    port: 9102
    targetPort: 9102 

kube-state-metrics:
  image:
    repository: bitnami/kube-state-metrics
    tag: 2.6.0

grafana:
  service: 
    type: NodePort

spark-dashboard:
  enabled: true     
  influxdb:  
    storage:
      class: "longhorn"
      type: "ReadWriteOnce"
      size: "2Gi"